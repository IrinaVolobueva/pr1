<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAQAAADPAAAArwAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABGAAAA/gAA
        APwAAAD/AAAA3AAAAAAAAACjAAAA/wAAAP8AAACPAAAAAAAAAAAAAACPAAAA/wAAAP8AAACjAAAAAAAA
        AN0AAAD/AAAA/AAAAP4AAABGAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAApAAAAWwAAAF0AAABIAAAAAAAAACcAAABPAAAA1wAAALQAAAAAAAAAAAAAALQAAADXAAAATwAA
        ACcAAAAAAAAASAAAAF0AAABbAAAAKQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAC0AAAA2AAAAE8AAABPAAAA2AAA
        ALQAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAEAAAAAwAAAAAAAAAFAAAAAAAAAIwAAAD/AAAA+wAA
        APsAAAD/AAAAjAAAAAAAAAAFAAAAAAAAAAMAAAAEAAAABAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        ABEAAAANAAAADQAAABEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6X/+l/AAAA/oAAAXyAAAE8mACJPJAACTyQAAk8kWgJPJAACTySBAk8kQ
        QJPJFAiTySAEk8kAAJPJF+iTyQAAk8kgBJPJAACTyRfok8kAAJPJIASTyQAAk8kX6JPJAACTySAEk8gk
        JBPoIYQX5CGEJ+lIEpfkKBQn/+gX///yT/8=
</value>
  </data>
</root>